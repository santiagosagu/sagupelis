[{"/home/atlanticsoft/sagu/sagupelis/src/index.js":"1","/home/atlanticsoft/sagu/sagupelis/src/reportWebVitals.js":"2","/home/atlanticsoft/sagu/sagupelis/src/App.js":"3","/home/atlanticsoft/sagu/sagupelis/src/serviceWorkerRegistration.js":"4","/home/atlanticsoft/sagu/sagupelis/src/firebaseConfig.js":"5","/home/atlanticsoft/sagu/sagupelis/src/components/Header.js":"6","/home/atlanticsoft/sagu/sagupelis/src/components/Peliculas.js":"7","/home/atlanticsoft/sagu/sagupelis/src/components/VerPelicula.js":"8","/home/atlanticsoft/sagu/sagupelis/src/components/Buscar.js":"9","/home/atlanticsoft/sagu/sagupelis/src/components/VerSerie.js":"10","/home/atlanticsoft/sagu/sagupelis/src/components/Carrusel.js":"11","/home/atlanticsoft/sagu/sagupelis/src/components/Series.js":"12","/home/atlanticsoft/sagu/sagupelis/src/components/Inicio.js":"13","/home/atlanticsoft/sagu/sagupelis/src/hooks/useInformacionSeries.js":"14","/home/atlanticsoft/sagu/sagupelis/src/hooks/useInformacionPeliculas.js":"15"},{"size":817,"mtime":1624749660230,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1624749660230,"results":"18","hashOfConfig":"17"},{"size":4477,"mtime":1624757458792,"results":"19","hashOfConfig":"17"},{"size":5064,"mtime":1624749660230,"results":"20","hashOfConfig":"17"},{"size":610,"mtime":1624749660226,"results":"21","hashOfConfig":"17"},{"size":3270,"mtime":1624749660226,"results":"22","hashOfConfig":"17"},{"size":3685,"mtime":1624749660226,"results":"23","hashOfConfig":"17"},{"size":14630,"mtime":1624749660226,"results":"24","hashOfConfig":"17"},{"size":8609,"mtime":1624749660226,"results":"25","hashOfConfig":"17"},{"size":19472,"mtime":1624749660226,"results":"26","hashOfConfig":"17"},{"size":1400,"mtime":1624749660226,"results":"27","hashOfConfig":"17"},{"size":3187,"mtime":1624749660226,"results":"28","hashOfConfig":"17"},{"size":16166,"mtime":1624761022856,"results":"29","hashOfConfig":"17"},{"size":190619,"mtime":1624749660230,"results":"30","hashOfConfig":"17"},{"size":68820,"mtime":1624761011500,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bnsxx0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/atlanticsoft/sagu/sagupelis/src/index.js",[],["69","70"],"/home/atlanticsoft/sagu/sagupelis/src/reportWebVitals.js",[],"/home/atlanticsoft/sagu/sagupelis/src/App.js",["71","72"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n} from \"react-router-dom\";\nimport Push from 'push.js'\nimport logo from './logo3.png'\nimport { db } from './firebaseConfig'\n\nimport Inicio from './components/Inicio';\nimport Peliculas from './components/Peliculas';\nimport Series from './components/Series';\nimport Carrusel from './components/Carrusel';\nimport VerPelicula from './components/VerPelicula';\nimport Buscar from './components/Buscar';\nimport Styled from '@emotion/styled'\nimport VerSerie from './components/VerSerie';\n\n\nconst Derechos = Styled.h3`\n  text-align: center;\n  margin: 4rem 0;\n`\n\nconst App = () => {\n\n  const estrenos = [\n    {\n      id: 1,\n      imagen: 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/5Nfl7nbruxF1z01GxExUO0GYujm.jpg',\n      nombre: 'Focus',\n      descripcion: 'Nicky, un consumado maestro de la estafa conoce a Jess, una atractiva y joven ladrona que está dando sus primeros pasos en el oficio. Tras el intenso encuentro entre ambos, Nicky decide compartir sus trucos con ella.',\n      categoria: 'Romance, Comedia, Crimen, Drama',\n      url: 'https://www.antentri.top/watch_video.php?v=elJKa2R4cURsZFAyalZjNTNsSllUMXYxZlNuY2NxOGlSVVVCaThkN0xjVXV3QWVRcURJaFpoZmdINGRSc0VFNg%3D%3D#iss=MTgxLjEzNS41MC4yMDQ='\n    },\n    {\n      id: 2,\n      imagen: 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/d1QKiYtceF3GDtxvTFXFAqwwah9.jpg',\n      nombre: 'Interstellar',\n      descripcion: 'Narra las aventuras de un grupo de exploradores que hacen uso de un agujero de gusano recientemente descubierto para superar las limitaciones de los viajes espaciales tripulados y vencer las inmensas distancias que tiene un viaje interestelar.',\n      categoria: 'Aventura, Drama, Ciencia ficción',\n      url: 'https://jetload.net/p/g6iUNY4ALWM3'\n    },\n    {\n      id: 3,\n      imagen: 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/oG8rC5WEUFEMsMeBLGJWspJ1Gp5.jpg',\n      nombre: 'Mujer Maravilla 1984 (2020)',\n      descripcion: 'En 1984, en plena guerra fría, Diana Prince, conocida como Wonder Woman se enfrenta al empresario Maxwell Lord y a su antigua amiga Barbara Minerva / Cheetah, una villana que posee fuerza y agilidad sobrehumanas.',\n      categoria: 'Fantasía, Acción, Aventura',\n      url: 'https://jetload.net/p/xid7usBpXso9'\n    },\n    {\n      id: 4,\n      imagen: 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/bHke4PS5Whg0pz6dDWhzAmwvEr8.jpg',\n      nombre: 'Cuenta pendiente',\n      descripcion: 'David Cuevas es un hombre de familia que trabaja como recaudador de impuestos de los pandilleros de alto rango de Los Ángeles. Hace colecciones en toda la ciudad con su compañero Creeper asegurándose de que las personas paguen o vean represalias. Una vieja amenaza regresa a Los Ángeles que pone en peligro todo lo que David ama.',\n      categoria: 'Acción, Crimen, Drama',\n      url: 'https://jetload.net/p/056MYXOfXD6u'\n    }\n  ]\n\n  const [notificacion, setNotificacion] = useState([])\n\n  /* actualizar las notificaciones */\n  useEffect(() => {\n    const obtenerProductos = () => {\n      db.collection('notificacion').onSnapshot(manejarSnapshot)\n    }\n\n    obtenerProductos()\n\n    function manejarSnapshot(snapshot) {\n      const resultado = snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n\n      setNotificacion(resultado)\n\n    }\n  }, [])\n\n  /* notificaciones */\n  useEffect(() => {\n\n    if (notificacion.length > 0) {\n      Push.create(`${notificacion[0].titulo}`, {\n        body: `${notificacion[0].mensaje}`,\n        icon: `${logo}`,\n        onClick: function () {\n          window.focus();\n          this.close();\n        }\n      });\n    }\n\n  }, [notificacion])\n\n\n\n  console.log(notificacion)\n\n  return (\n    <>\n      <Router>\n\n        <Header />\n\n        <Switch>\n          <Route exact path='/' component={Inicio} />\n\n          <Route exact path='/peliculas' component={Peliculas} />\n          <Route exact path='/series' component={Series} />\n          <Route exact path='/buscar' component={Buscar} />\n          <Route exact path='/ver-pelicula/:nombre/:id' component={VerPelicula} />\n          <Route exact path='/ver-serie/:nombre/:id' component={VerSerie} />\n        </Switch>\n\n        <Derechos>Todos los Derechos Reservados {new Date().getFullYear()}</Derechos>\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","/home/atlanticsoft/sagu/sagupelis/src/serviceWorkerRegistration.js",[],"/home/atlanticsoft/sagu/sagupelis/src/firebaseConfig.js",[],"/home/atlanticsoft/sagu/sagupelis/src/components/Header.js",[],"/home/atlanticsoft/sagu/sagupelis/src/components/Peliculas.js",["73","74","75"],"import React, { useState, useEffect } from 'react'\nimport Styled from '@emotion/styled'\nimport useInformacionPeliculas from '../hooks/useInformacionPeliculas'\n\n\n\nconst Titulo = Styled.h2`\n    margin: 2rem;\n\n    @media (min-width: 768px) {\n        margin: 2rem 8rem;\n    }\n`\n\nconst Contenedor = Styled.div`\n\n    display: grid;\n    grid-template-columns: 45% 45%;\n    grid-gap: 3rem;\n    margin: 2rem;\n\n    @media (min-width: 768px) {\n        grid-template-columns: 20rem 20rem 20rem;\n        margin: 2rem;\n        grid-gap: 6rem;\n    }\n\n    @media (min-width: 1200px) {\n        grid-template-columns: 20rem 20rem 20rem 20rem 20rem;\n        margin: 2rem 4rem 2rem 6rem;\n        grid-gap: 3rem;\n    }\n\n    @media (min-width: 1300px) {\n        grid-template-columns: 20rem 20rem 20rem 20rem 20rem;\n        margin: 2rem 8rem;\n        grid-gap: 6rem;\n    }\n    \n\n\n`\n\nconst Card = Styled.div`\n    margin-right: 1.5rem;\n\n    @media (min-width: 768px) {\n        margin-right: 2.5rem;\n\n        :hover{\n            cursor: pointer;\n        }\n    }\n`\n\nconst CardImage = Styled.div`\n    width: 15rem;\n    height: 20rem;\n    background-color:#fff;\n    border-radius: 10px;\n    margin-bottom: 3rem;\n   \n\n    img {\n        width: 100%;\n        height: auto;\n        \n    }\n\n    img {\n        :hover {\n            -webkit-transform:scale(1.2);transform:scale(1.2);\n            transition: all 1s ease;\n        }\n    }\n\n\n    @media (min-width: 768px) {\n        width: 22rem;\n        height: 30rem;\n        background-color:#fff;\n        margin-bottom: 5rem;\n    }\n`\n\nconst Peliculas = ({ history }) => {\n\n    const [datosPelicula, guardarDatosPelicula] = useState({})\n    const [datosSerie, guardarDatosSerie] = useState({})\n\n    const [verPelicula, guardarVerPelicula] = useState(false)\n    const [verSerie, guardarVerSerie] = useState(false)\n\n    const { peliculas } = useInformacionPeliculas()\n\n    useEffect(() => {\n        const verificarDatos = () => {\n\n            if (!datosPelicula) {\n\n                guardarVerPelicula(false)\n            }\n        }\n\n        verificarDatos()\n\n    }, [datosPelicula])\n\n\n    const peliculaSeleccionada = pelicula => {\n\n        guardarDatosPelicula(pelicula)\n        guardarDatosSerie({})\n\n        guardarVerPelicula(true)\n        guardarVerSerie(false)\n\n\n        history.push(`/ver-pelicula/${pelicula.nombre}/${pelicula.id}`)\n\n    }\n\n    useEffect(() => {\n        const buscador = () => {\n            const busqueda = 'accion'\n\n            const filtro = peliculas.filter(pelicula => {\n                return (\n                    pelicula.nombre.toLowerCase().includes(busqueda) ||\n                    pelicula.descripcion.toLowerCase().includes(busqueda) ||\n                    pelicula.categoria.toLowerCase().includes(busqueda)\n                )\n            })\n\n        }\n\n        buscador()\n    }, [])\n\n    return (\n        <>\n            { !verPelicula && !verSerie\n\n                ?\n                <>\n                    <Titulo>Todas las Peliculas</Titulo>\n\n                    <Contenedor>\n                        {\n                            peliculas.map(pelicula =>\n                                <Card onClick={() => peliculaSeleccionada(pelicula)}>\n                                    <CardImage >\n                                        <img src={pelicula.imagen} alt={pelicula.nombre} />\n                                    </CardImage>\n                                    <h3>{pelicula.nombre}</h3>\n\n                                </Card>\n                            )\n                        }\n                    </Contenedor>\n                </>\n\n                : null\n\n            }\n\n        </>\n\n    );\n}\n\nexport default Peliculas;","/home/atlanticsoft/sagu/sagupelis/src/components/VerPelicula.js",["76","77","78","79","80"],"import React, { useState, useEffect } from 'react'\nimport UseInformacionPeliculas from '../hooks/useInformacionPeliculas'\nimport Styled from '@emotion/styled'\nimport imagenUsuario from '../usuario.svg'\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport { es } from 'date-fns/locale'\nimport { db } from '../firebaseConfig'\n\nconst CardFlex = Styled.div`\n\n    border-radius: 5px;\n    background-color: rgba(29, 28, 28, 0.979);\n    padding: 0.5rem 0.5rem 1rem 0.5rem;\n\n\n    img{\n        width: 100%;\n    }\n\n    @media (min-width: 768px) {\n        display: flex;\n        margin: 1rem 4rem;\n        padding: 1rem;\n\n        img{\n        width: 100%;\n        height: 600px;\n\n    }\n    }\n\n    \n\n    \n`\nconst CardFlexContenido = Styled.div`\n    \n    padding: 1rem 3rem;\n\n    @media (min-width: 768px){\n        padding: 1rem 6rem;\n    }\n\n    h2{\n        font-size: 4rem;\n        margin: 1rem;\n        \n    }\n\n    span{\n        font-size: 2.5rem;\n    }\n`\nconst ContenidoVotos = Styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n\n    i{\n        font-size: 4rem;\n        margin: 2rem;\n        cursor: pointer;\n    }\n\n    p{\n        margin: 0;\n    }\n`\nconst Boton = Styled.h4`\n    color: #fff;\n    background-color: #53555a;\n    padding: 1.2rem;\n    font-size: 1.6rem;\n    opacity: 3;\n    text-align: center;\n    border-radius: 5px;\n\n    :hover {\n        cursor: pointer;\n    }\n`\nconst ContenedorReproductor = Styled.div`\n\n    padding: 1rem;\n\n    @media (min-width: 768px) {\n        padding: 5rem;\n        align-items: center;\n        text-align: center;\n    }\n    \n\n    iframe{\n        width: 100%;\n        height: 20rem;\n\n        @media (min-width: 768px){\n            width: 700px;\n            height: 500px;\n        }\n\n        @media (min-width: 1200px){\n            width: 1200px;\n            height: 500px;\n        }\n    }\n`\nconst ContenedorComentarios = Styled.div`\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 6rem auto;\n\n    .comentario{\n        width: 100%;\n        display: grid;\n        grid-template-columns: 100%;\n        border-bottom: 1px solid #fff; \n\n        @media (min-width: 768px){\n            grid-template-columns: 30% 70%;\n        }\n    }\n\n    .imagen-nombre{\n        display: flex;\n        margin: 1rem;\n        align-items: center;\n        \n        img{\n            max-width: 80px;\n            margin-right: 1rem;\n        }\n    }\n\n    .contenido-comentario{\n        \n        align-items: center;\n\n        p{\n            font-size: 1.7rem;\n        }\n        \n        @media (min-width: 768px){\n            h4{\n                margin-bottom: 1rem;\n            }\n\n        }\n    }\n`\n\nconst FormularioComentarios = Styled.div`\n    display: flex;\n    justify-content: center;\n    \n\n    form{\n        text-align: center;\n        width: 80%;\n        \n\n        input{ \n            width: 100%;\n            padding: 0.5rem;\n            font-size: 2.4rem;\n            margin-bottom: 2rem;\n            border-radius: 1rem;\n            text-align: center;\n            font-family: 'Yanone Kaffeesatz', sans-serif;\n\n            @media (min-width: 768px){\n                width:50%;\n                padding: 1rem;\n            }\n        }\n\n        textarea{\n            border-radius: 1rem;\n            font-size: 2.4rem;\n            text-align: center;\n            font-family: 'Yanone Kaffeesatz', sans-serif;\n            margin-bottom: 1rem;\n\n            @media (min-width: 768px){\n                width:50%;\n                padding: 1rem;\n            }\n        }\n\n        button{\n            padding: 1rem;\n            width: 100%;\n            font-family: 'Yanone Kaffeesatz', sans-serif;\n            font-size: 2.4rem;\n            border-radius: 1rem;\n            color: #fff;\n            background-color: #53555a;\n            border: none;\n\n            @media (min-width: 768px){\n                width: 30%;\n                padding: 1rem;\n            }\n        }\n    }\n`\n\nconst VerPelicula = ({ match, history }) => {\n\n    const [datosPelicula, guardarDatosPelicula] = useState(null)\n\n    const { peliculas } = UseInformacionPeliculas()\n\n    const [comentarios, setComentarios] = useState({\n        nombre: '',\n        nombreUsuario: '',\n        comentario: '',\n        creado: Date.now(),\n    })\n\n    const [comentariosDbTodos, setComentariosDbTodos] = useState([])\n\n    const [comentariosDb, setComentariosDb] = useState([])\n\n    const [consultarDb, setConsultarDb] = useState(false)\n\n    const [yaVotaste, setYaVotaste] = useState(false)\n\n    const [votosGusta, setVotosGusta] = useState([])\n\n    const [votosNoGusta, setVotosNoGusta] = useState([])\n\n    const [votosGustaActual, setVotosGustaActual] = useState([])\n\n    const [votosNoGustaActual, setVotosNoGustaActual] = useState([])\n\n    /* verifica los comentarios  */\n    useEffect(() => {\n        if (comentariosDbTodos.length > 0) {\n            const resultado = comentariosDbTodos.filter(dato => dato.nombre === datosPelicula[0].nombre)\n\n            console.log(resultado)\n            setComentariosDb(resultado)\n        }\n\n\n    }, [datosPelicula, comentariosDbTodos])\n\n    /* verificar me gusta */\n    useEffect(() => {\n        if (votosGusta.length > 0) {\n\n            const resultado = votosGusta.filter(dato => dato.nombre === datosPelicula[0].nombre)\n\n            setVotosGustaActual(resultado)\n        }\n    }, [votosGusta, consultarDb])\n\n    /* verificar no me gusta */\n    useEffect(() => {\n        if (votosNoGusta.length > 0) {\n\n            const resultado = votosNoGusta.filter(dato => dato.nombre === datosPelicula[0].nombre)\n\n            setVotosNoGustaActual(resultado)\n\n        }\n    }, [votosNoGusta, consultarDb])\n\n    //traer todos los votos me gusta\n    useEffect(() => {\n        const obtenerProductos = () => {\n            db.collection('votosGustaPeliculas').onSnapshot(manejarSnapshot)\n        }\n\n        obtenerProductos()\n\n        function manejarSnapshot(snapshot) {\n            const resultado = snapshot.docs.map(doc => {\n                return {\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            setVotosGusta(resultado)\n\n        }\n    }, [consultarDb])\n\n    //traer todos los votos no me gusta\n    useEffect(() => {\n        const obtenerProductos = () => {\n            db.collection('votosNoGustaPeliculas').onSnapshot(manejarSnapshot)\n        }\n\n        obtenerProductos()\n\n        function manejarSnapshot(snapshot) {\n            const resultado = snapshot.docs.map(doc => {\n                return {\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            setVotosNoGusta(resultado)\n\n        }\n    }, [consultarDb])\n\n    //traer todos los comentarios\n    useEffect(() => {\n        const obtenerProductos = () => {\n            db.collection('comentariosPeliculas').orderBy('creado', 'desc').onSnapshot(manejarSnapshot)\n        }\n\n        obtenerProductos()\n\n        function manejarSnapshot(snapshot) {\n            const resultado = snapshot.docs.map(doc => {\n                return {\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            setComentariosDbTodos(resultado)\n\n        }\n    }, [consultarDb])\n\n    useEffect(() => {\n\n        if (peliculas.length > 0 && datosPelicula !== null) {\n            const resultado = peliculas.filter(pelicula => pelicula.nombre === datosPelicula[0].nombre)\n\n            console.log(resultado[0].nombre)\n\n            setComentarios({\n                ...comentarios,\n                nombre: resultado[0].nombre,\n\n            })\n        }\n    }, [datosPelicula])\n\n    useEffect(() => {\n        const revisarPelicula = () => {\n\n            const prueba = peliculas.filter(pelicula => pelicula.id === Number(match.params.id))\n\n            guardarDatosPelicula(prueba)\n\n        }\n\n        revisarPelicula()\n\n    }, [])\n\n    const volverSeleccion = () => {\n        history.push('/')\n    }\n\n    const enviarComentario = async e => {\n        e.preventDefault()\n\n        if (comentarios.nombreUsuario !== '' && comentarios.comentario !== '') {\n            await db.collection('comentariosPeliculas').add(comentarios)\n\n            setComentarios({\n                ...comentarios,\n                nombreUsuario: '',\n                comentario: '',\n                creado: Date.now(),\n\n            })\n\n            setConsultarDb(true)\n\n            setTimeout(() => {\n                setConsultarDb(false)\n            }, 3000);\n\n        }\n\n    }\n    console.log(votosGusta)\n\n    const gusta = async nombre => {\n\n        if (votosGustaActual.length > 0 && !yaVotaste) {\n            const verificacion = votosGusta.filter(item => item.nombre === nombre)\n\n            const editarVotos = await db.collection('votosGustaPeliculas').doc(verificacion[0].id)\n\n            setYaVotaste(true)\n\n            return editarVotos.update({\n                votos: verificacion[0].votos + 1\n            })\n\n\n\n        } else {\n            const votosgusta = {\n                nombre: nombre,\n                votos: 1\n            }\n\n            if (!yaVotaste) {\n                await db.collection('votosGustaPeliculas').add(votosgusta)\n\n                setYaVotaste(true)\n            }\n\n        }\n\n        setYaVotaste(true)\n\n        setConsultarDb(true)\n\n        setTimeout(() => {\n            setConsultarDb(false)\n        }, 3000);\n\n    }\n\n    const noGusta = async nombre => {\n\n        if (votosNoGustaActual.length > 0 && !yaVotaste) {\n            const verificacion = votosNoGusta.filter(item => item.nombre === nombre)\n\n            const editarVotos = await db.collection('votosNoGustaPeliculas').doc(verificacion[0].id)\n\n            setYaVotaste(true)\n\n            return editarVotos.update({\n                votos: verificacion[0].votos + 1\n            })\n        } else {\n            const votosNoGusta = {\n                nombre: nombre,\n                votos: 1\n            }\n\n            if (!yaVotaste) {\n                await db.collection('votosNoGustaPeliculas').add(votosNoGusta)\n\n                setYaVotaste(true)\n            }\n        }  \n\n        setConsultarDb(true)\n\n        setTimeout(() => {\n            setConsultarDb(false)\n        }, 3000);\n    }\n\n    return (\n        <>\n            { datosPelicula &&\n                <>\n                    <CardFlex>\n                        <img src={datosPelicula[0].imagen} alt=\"\" />\n                        <CardFlexContenido>\n                            <h2>{datosPelicula[0].nombre}</h2>\n                            <h4> <span>Categoria:</span>  {datosPelicula[0].categoria}</h4>\n                            <p>{datosPelicula[0].descripcion}</p>\n                            <ContenidoVotos>\n                                <div>\n                                    <i className=\"fas fa-thumbs-up\" onClick={() => gusta(datosPelicula[0].nombre)}></i>\n                                    {votosGustaActual.length > 0\n                                        ? <p>{votosGustaActual[0].votos}</p>\n                                        : <p>0</p>\n\n                                    }\n\n                                </div>\n                                <div>\n                                    <i className=\"fas fa-thumbs-down\" onClick={() => noGusta(datosPelicula[0].nombre)}></i>\n                                    {votosNoGustaActual.length > 0\n                                        ? <p>{votosNoGustaActual[0].votos}</p>\n                                        : <p>0</p>\n\n                                    }\n                                </div>\n                            </ContenidoVotos>\n                            <Boton onClick={() => volverSeleccion()}>Volver</Boton>\n                        </CardFlexContenido>\n\n                    </CardFlex>\n\n                    <ContenedorReproductor>\n                        <iframe src={datosPelicula[0].url} frameborder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowfullscreen='true' scrolling=\"no\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" width=\"700\" height=\"430\" ></iframe>\n                    </ContenedorReproductor>\n\n                    <FormularioComentarios>\n                        <form\n                            onSubmit={enviarComentario}\n                        >\n                            <h2>Escribe Tu Comentario Sobre esta Pelicula</h2>\n                            <input\n                                type=\"text\"\n                                value={comentarios.nombreUsuario}\n                                name='nombreUsuario'\n                                placeholder='Escribe tu nombre'\n                                onChange={e => setComentarios({ ...comentarios, [e.target.name]: e.target.value })} />\n                            <br />\n\n                            <textarea\n                                name=\"comentario\"\n                                value={comentarios.comentario}\n                                cols=\"30\"\n                                rows=\"7\"\n                                placeholder='Que piensas de esta pelicula'\n                                onChange={e => setComentarios({ ...comentarios, [e.target.name]: e.target.value })}></textarea>\n                            <br />\n                            <button>Comentar</button>\n                        </form>\n                    </FormularioComentarios>\n\n                    { comentariosDb.length !== 0 &&\n\n                        <ContenedorComentarios>\n                            {comentariosDb.map(comentario => (\n                                <div className='comentario'>\n                                    <div className='imagen-nombre'>\n                                        <img src={imagenUsuario} alt={imagenUsuario} />\n                                        <h3>{comentario.nombreUsuario}</h3>\n                                    </div>\n                                    <div className='contenido-comentario'>\n                                        <h4>{comentario.comentario}</h4>\n                                        <p>Publicado hace: {formatDistanceToNow(new Date(comentario.creado), { locale: es })}</p>\n                                    </div>\n\n                                </div>\n                            ))}\n\n\n                        </ContenedorComentarios>\n                    }\n                </>\n            }\n\n\n        </>\n    );\n}\n\nexport default VerPelicula;","/home/atlanticsoft/sagu/sagupelis/src/components/Buscar.js",["81","82"],"import React, { useState, useEffect } from 'react';\nimport Styled from '@emotion/styled'\nimport useInformacionSeries from '../hooks/useInformacionSeries'\nimport useInformacionPeliculas from '../hooks/useInformacionPeliculas'\nimport VerPelicula from './VerPelicula'\nimport VerSerie from './VerSerie'\n\nconst Contenedor = Styled.div`\n    margin: 4rem 1rem;\n    align-items: center;\n    text-align: center;\n\n    @media ( min-width: 768px ) {\n        margin: 4rem;\n    }\n`\n\nconst Campo = Styled.input`\n    background-color:  rgb(19, 18, 18);\n    border: none;\n    border-bottom: 1px solid #fff;\n    width: 100%;\n    font-size: 1.6rem;\n    color: #fff;\n    text-align: center;\n\n    @media ( min-width: 768px ) {\n        width: 60rem;\n        font-size: 2rem;\n    }\n`\n\nconst Boton = Styled.input`\n    color: #fff;\n    background-color: #53555a;\n    padding: 1rem;\n    opacity: 3;\n    text-align: center;\n    border-radius: 1rem;\n    border: none;\n    margin: 1rem 0;\n    font-size: 2rem;\n    width: 100%;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    @media ( min-width: 768px ) {\n        width: 20rem;\n        margin: 2rem;\n        padding: 1.5rem 2rem;\n\n        :hover {\n            background-color: #53556a;\n        }\n    }\n`\n\nconst Resultado = Styled.div`\n\n    margin-bottom: 6rem;\n\n    h2{\n        text-align: center;\n        margin: 2rem 4rem;\n        text-transform: capitalize;\n    }\n`\n\nconst ContenedorResultado = Styled.div`\n\n    display: grid;\n    grid-template-columns: 45% 45%;\n    grid-gap: 3rem;\n    margin: 2rem;\n\n    @media (min-width: 768px) {\n        grid-template-columns: 20rem 20rem 20rem;\n        margin: 2rem;\n        grid-gap: 6rem;\n    }\n\n    @media (min-width: 1200px) {\n        grid-template-columns: 20rem 20rem 20rem 20rem 20rem;\n        margin: 2rem 4rem 2rem 6rem;\n        grid-gap: 3rem;\n    }\n\n    @media (min-width: 1300px) {\n        grid-template-columns: 20rem 20rem 20rem 20rem 20rem;\n        margin: 2rem 8rem;\n        grid-gap: 6rem;\n    }\n    \n\n\n`\n\nconst Card = Styled.div`\n    margin-right: 1.5rem;\n\n    @media (min-width: 768px) {\n        margin-right: 2.5rem;\n\n        :hover{\n            cursor: pointer;\n        }\n    }\n`\n\nconst CardImage = Styled.div`\n    width: 15rem;\n    height: 20rem;\n    background-color:#fff;\n    border-radius: 10px;\n    margin-bottom: 3rem;\n   \n\n    img {\n        width: 100%;\n        height: auto;\n        \n    }\n\n    @media (min-width: 768px) {\n        width: 22rem;\n        height: 30rem;\n        background-color:#fff;\n        margin-bottom: 5rem;\n    }\n`\n\nconst Buscar = ({ history }) => {\n\n    const [datosPelicula, guardarDatosPelicula] = useState({})\n    const [datosSerie, guardarDatosSerie] = useState({})\n\n    const [verPelicula, guardarVerPelicula] = useState(false)\n    const [verSerie, guardarVerSerie] = useState(false)\n\n    const [busquedatexto, guardarBusquedaTexto] = useState({\n        busqueda: ''\n    })\n\n    const [resultadoBusquedaPelicula, guardarResultadoBusquedaPelicula] = useState([])\n    const [resultadoBusquedaSerie, guardarResultadoBusquedaSerie] = useState([])\n\n    const { peliculas } = useInformacionPeliculas()\n    const { series } = useInformacionSeries()\n\n    useEffect(() => {\n        const buscador = () => {\n            const busqueda = busquedatexto.busqueda.toLocaleLowerCase()\n\n            if (busquedatexto.busqueda.length > 0) {\n                const filtro = peliculas.filter(pelicula => {\n                    return (\n                        pelicula.nombre.toLowerCase().includes(busqueda) ||\n                        /* pelicula.descripcion.toLowerCase().includes(busqueda) || */\n                        pelicula.categoria.toLowerCase().includes(busqueda)\n                    )\n                })\n\n                guardarResultadoBusquedaPelicula(filtro)\n            } else {\n                guardarResultadoBusquedaPelicula({})\n            }\n\n            if (busquedatexto.busqueda.length > 0) {\n                const filtro = series.filter(serie => {\n                    return (\n                        serie.nombre.toLowerCase().includes(busqueda) ||\n                        /* serie.descripcion.toLowerCase().includes(busqueda) || */\n                        serie.categoria.toLowerCase().includes(busqueda)\n                    )\n                })\n\n                guardarResultadoBusquedaSerie(filtro)\n            } else {\n                guardarResultadoBusquedaSerie({})\n            }\n\n\n\n        }\n\n        buscador()\n    }, [busquedatexto])\n\n    const realizarBusqueda = (e) => {\n        e.preventDefault()\n    }\n\n    const peliculaSeleccionada = pelicula => {\n\n        guardarDatosPelicula(pelicula)\n        guardarDatosSerie({})\n\n        guardarVerPelicula(true)\n        guardarVerSerie(false)\n\n\n        history.push(`/ver-pelicula/${pelicula.nombre}/${pelicula.id}`)\n\n    }\n\n    const serieSeleccionada = serie => {\n\n        guardarDatosPelicula({})\n        guardarDatosSerie(serie)\n\n        guardarVerPelicula(false)\n        guardarVerSerie(true)\n\n        history.push(`/ver-serie/${serie.nombre}/${serie.id}`)\n\n    }\n\n    const queMostrar = () => {\n        if (verPelicula || datosPelicula.length > 0) {\n            return (\n                <VerPelicula\n                    datosPelicula={datosPelicula}\n                    guardarDatosPelicula={guardarDatosPelicula}\n                    guardarVerPelicula={guardarVerPelicula}\n                />\n            )\n        }\n\n        if (verSerie || datosSerie.length > 0) {\n            return (\n                <VerSerie\n                    datosSerie={datosSerie}\n                    guardarDatosSerie={guardarDatosSerie}\n                    guardarVerSerie={guardarVerSerie}\n                />\n            )\n        }\n    }\n\n    return (\n        <>\n            { !verPelicula && !verSerie\n                ? <div>\n                    <Contenedor>\n                        <form\n                            onSubmit={realizarBusqueda}\n                        >\n                            <Campo\n                                type=\"text\"\n                                name=\"busqueda\"\n                                placeholder=\"Escribe el Nombre, Categoria o Año que buscas\"\n                                onChange={e => guardarBusquedaTexto({ [e.target.name]: e.target.value })}\n                            />\n                            <br />\n                            {/* <Boton type=\"submit\" value=\"Buscar\" /> */}\n                        </form>\n                    </Contenedor>\n\n                    {/* contenedor resultado peliculas */}\n\n                    {resultadoBusquedaPelicula.length > 0\n\n                        ? <Resultado>\n                            <h2>Resultado Peliculas</h2>\n                            <ContenedorResultado>\n\n                                {\n                                    resultadoBusquedaPelicula.map(pelicula =>\n                                        <Card onClick={() => peliculaSeleccionada(pelicula)}>\n                                            <CardImage >\n                                                <img src={pelicula.imagen} alt={pelicula.nombre} />\n                                            </CardImage>\n                                            <h3>{pelicula.nombre}</h3>\n\n                                        </Card>\n                                    )\n                                }\n                            </ContenedorResultado>\n                        </Resultado>\n                        : null\n\n                    }\n\n\n                    {/* contenedor resultado series */}\n\n                    {resultadoBusquedaSerie.length > 0\n\n                        ? <Resultado>\n                            <h2>Resultado Series</h2>\n                            <ContenedorResultado>\n                                {\n                                    resultadoBusquedaSerie.map(serie =>\n                                        <Card onClick={() => serieSeleccionada(serie)}>\n                                            <CardImage >\n                                                <img src={serie.imagen} alt={serie.nombre} />\n                                            </CardImage>\n                                            <h3>{serie.nombre}</h3>\n\n                                        </Card>\n                                    )\n                                }\n                            </ContenedorResultado>\n\n                        </Resultado>\n                        : null\n\n                    }\n                </div>\n\n                    : queMostrar()\n            }\n\n\n\n\n\n\n        </>\n    );\n}\n\nexport default Buscar;\n\n","/home/atlanticsoft/sagu/sagupelis/src/components/VerSerie.js",["83","84","85","86","87","88"],"import React, { useState, useEffect } from 'react';\nimport useInformacionSeries from '../hooks/useInformacionSeries';\nimport Styled from '@emotion/styled'\nimport imagenUsuario from '../usuario.svg'\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport { es } from 'date-fns/locale'\nimport { db } from '../firebaseConfig'\n\n\nconst CardFlex = Styled.div`\n\n    background-color: rgba(29, 28, 28, 0.979);\n    border-radius: 5px;\n    padding: 0.5rem 0.5rem 1rem 0.5rem;\n\n    img{\n        width: 100%;\n    }\n\n    @media (min-width: 768px) {\n        display: flex;\n        margin: 1rem 7rem;\n        padding: 1rem;\n        img{\n        width: 620px;\n        height: 650px;\n\n    }\n    }\n\n    \n\n    \n`\nconst CardFlexContenido = Styled.div`\n    margin: 1rem 3rem;\n\n    h2{\n        font-size: 4rem;\n        margin: 1rem;\n    }\n\n    span{\n        font-size: 2.5rem;\n    }\n`\n\nconst Boton = Styled.h4`\n    color: #fff;\n    background-color: #53555a;\n    padding: 1.2rem;\n    font-size: 1.6rem;\n    opacity: 3;\n    text-align: center;\n    border-radius: 5px;\n\n    :hover {\n        cursor: pointer;\n    }\n`\nconst ContenidoVotos = Styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n\n    i{\n        font-size: 4rem;\n        margin: 2rem;\n        cursor: pointer;\n    }\n\n    p{\n        margin: 0;\n    }\n`\n\nconst Contenedor = Styled.div`\n    margin: 0 2rem;\n    \n\n    @media (max-width: 768px) {\n        ::-webkit-scrollbar{\n            width: 0;\n        }\n    }\n\n        @media (min-width: 768px) {\n            margin: 0 8rem;\n\n            ::-webkit-scrollbar {\n                width: 5px;\n                background: #000;\n                margin: 0;\n            }\n\n            ::-webkit-scrollbar-thumb {\n                background:  #53555a;\n            }\n\n            ::-webkit-scrollbar-track {\n                box-shadow: inset 0 0 0 grey;\n                border-radius: 5px;\n            }\n    }\n`\nconst ContenedorTemporadas = Styled.div`\n    select {\n        padding: 1.2rem;\n        font-size: 1.6rem;\n        width: 100%;\n        text-align: center;\n        align-items: center;\n        background-color: #53555a;\n        color: #fff;\n        border: none;\n        margin: 1rem 0;\n        border-radius: 5px;\n        text-transform: capitalize;\n\n        @media (min-width: 768px) {\n            width: auto;\n            font-size: 1.8rem;\n        }\n    }\n\n\n`\n\nconst Temporada = Styled.h3`\n    text-transform: capitalize;\n    font-size: 3.2rem;\n    font-weight: bold;\n\n    :hover{\n        color: #fff;\n        cursor:pointer;\n    }\n    \n\n    @media (min-width: 768px) {\n        margin: 2rem 0;\n    }\n`\n\nconst Tarjetas = Styled.div`\n    display: flex;\n    overflow: auto;\n    \n\n    @media (max-width: 768px) {\n        ::-webkit-scrollbar{\n            width: 0;\n        }\n    }\n\n        @media (min-width: 768px) {\n            margin: 1.5rem 0;\n\n            ::-webkit-scrollbar {\n                width: 5px;\n                background: #000;\n                margin: 0;\n            }\n\n            ::-webkit-scrollbar-thumb {\n                background:  #53555a;\n            }\n\n            ::-webkit-scrollbar-track {\n                box-shadow: inset 0 0 0 grey;\n                border-radius: 5px;\n            }\n    }\n`\n\nconst Card = Styled.div`\n    margin-right: 1.5rem;\n    text-transform: capitalize;\n\n    h3{\n        margin-top: 0;\n    }\n\n    h4{\n        margin-bottom: 0.5rem;\n    }\n\n    @media (min-width: 768px) {\n        margin-right: 2.5rem;\n\n        :hover{\n            color: #fff;\n            cursor: pointer;\n        }\n    }\n`\n\nconst CardImage = Styled.div`\n    width: 15rem;\n    height: 20rem;\n    background-color:#fff;\n    border-radius: 10px;\n    margin-bottom: 3rem;\n\n    img {\n        width: 100%;\n        height: auto;\n        \n    }\n\n    @media (min-width: 768px) {\n        width: 22rem;\n        height: 30rem;\n        background-color:#fff;\n        margin-bottom: 5rem;\n    }\n`\n\nconst ContenedorReproductor = Styled.div`\n\n    padding: 1rem;\n\n    @media (min-width: 1200px) {\n        padding: 5rem;\n        align-items: center;\n        text-align: center;\n    }\n    \n\n    iframe{\n        width: 100%;\n        height: 20rem;\n\n        @media (min-width: 768px){\n            width: 100%;\n            height: 500px;\n        }\n\n        @media (min-width: 1200px){\n            width: 1200px;\n            height: 500px;\n        }\n    }\n`\nconst ContenedorComentarios = Styled.div`\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 6rem auto;\n\n    .comentario{\n        width: 100%;\n        display: grid;\n        grid-template-columns: 100%;\n        border-bottom: 1px solid #fff; \n\n        @media (min-width: 768px){\n            grid-template-columns: 30% 70%;\n        }\n    }\n\n    .imagen-nombre{\n        display: flex;\n        margin: 1rem;\n        align-items: center;\n        \n        img{\n            max-width: 80px;\n            margin-right: 1rem;\n        }\n    }\n\n    .contenido-comentario{\n        \n        align-items: center;\n\n        p{\n            font-size: 1.7rem;\n        }\n        \n        @media (min-width: 768px){\n            h4{\n                margin-bottom: 1rem;\n            }\n\n        }\n    }\n`\n\nconst FormularioComentarios = Styled.div`\n    display: flex;\n    justify-content: center;\n    \n\n    form{\n        text-align: center;\n        width: 80%;\n        \n\n        input{ \n            width: 100%;\n            padding: 0.5rem;\n            font-size: 2.4rem;\n            margin-bottom: 2rem;\n            border-radius: 1rem;\n            text-align: center;\n            font-family: 'Yanone Kaffeesatz', sans-serif;\n\n            @media (min-width: 768px){\n                width:50%;\n                padding: 1rem;\n            }\n        }\n\n        textarea{\n            border-radius: 1rem;\n            font-size: 2.4rem;\n            text-align: center;\n            font-family: 'Yanone Kaffeesatz', sans-serif;\n            margin-bottom: 1rem;\n\n            @media (min-width: 768px){\n                width:50%;\n                padding: 1rem;\n            }\n        }\n\n        button{\n            padding: 1rem;\n            width: 100%;\n            font-family: 'Yanone Kaffeesatz', sans-serif;\n            font-size: 2.4rem;\n            border-radius: 1rem;\n            color: #fff;\n            background-color: #53555a;\n            border: none;\n\n            @media (min-width: 768px){\n                width: 30%;\n                padding: 1rem;\n            }\n        }\n    }\n`\n\nconst VerSerie = ({ match, history }) => {\n\n    const [datosSerie, guardarDatosSerie] = useState(null)\n    const [temporadaState, guardarTemporadaState] = useState('temporada 1')\n    const [temporadaSeleccionada, guardarTemporadaSeleccionada] = useState([])\n    const [verCapitulo, guardaVerCapitulo] = useState(false)\n    const [urlCapitulo, guardarUrlCapitulo] = useState('')\n    const [mostrarEpisodios, guardarMostrarEpisodios] = useState(false)\n\n    const { series } = useInformacionSeries()\n\n    const [comentarios, setComentarios] = useState({\n        nombre: '',\n        nombreUsuario: '',\n        comentario: '',\n        creado: Date.now(),\n    })\n\n    const [comentariosDbTodos, setComentariosDbTodos] = useState([])\n\n    const [comentariosDb, setComentariosDb] = useState([])\n\n    const [consultarDb, setConsultarDb] = useState(false)\n\n    const [yaVotaste, setYaVotaste] = useState(false)\n\n    const [votosGusta, setVotosGusta] = useState([])\n\n    const [votosNoGusta, setVotosNoGusta] = useState([])\n\n    const [votosGustaActual, setVotosGustaActual] = useState([])\n\n    const [votosNoGustaActual, setVotosNoGustaActual] = useState([])\n\n    /* verificar me gusta */\n    useEffect(() => {\n        if (votosGusta.length > 0) {\n\n            const resultado = votosGusta.filter(dato => dato.nombre === datosSerie[0].nombre)\n\n            setVotosGustaActual(resultado)\n        }\n    }, [votosGusta, consultarDb])\n\n    /* verificar no me gusta */\n    useEffect(() => {\n        if (votosNoGusta.length > 0) {\n\n            const resultado = votosNoGusta.filter(dato => dato.nombre === datosSerie[0].nombre)\n\n            setVotosNoGustaActual(resultado)\n\n        }\n    }, [votosNoGusta, consultarDb])\n\n    //traer todos los votos me gusta\n    useEffect(() => {\n        const obtenerProductos = () => {\n            db.collection('votosGustaSeries').onSnapshot(manejarSnapshot)\n        }\n\n        obtenerProductos()\n\n        function manejarSnapshot(snapshot) {\n            const resultado = snapshot.docs.map(doc => {\n                return {\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            setVotosGusta(resultado)\n\n        }\n    }, [consultarDb])\n\n    //traer todos los votos no me gusta\n    useEffect(() => {\n        const obtenerProductos = () => {\n            db.collection('votosNoGustaSeries').onSnapshot(manejarSnapshot)\n        }\n\n        obtenerProductos()\n\n        function manejarSnapshot(snapshot) {\n            const resultado = snapshot.docs.map(doc => {\n                return {\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            setVotosNoGusta(resultado)\n\n        }\n    }, [consultarDb])\n\n    /* verificar comentarios */\n    useEffect(() => {\n        if (comentariosDbTodos.length > 0) {\n            const resultado = comentariosDbTodos.filter(dato => dato.nombre === datosSerie[0].nombre)\n\n\n            setComentariosDb(resultado)\n        }\n\n\n    }, [datosSerie, comentariosDbTodos])\n\n    //traer todos los comentarios\n    useEffect(() => {\n        const obtenerProductos = () => {\n            db.collection('comentariosSeries').orderBy('creado', 'desc').onSnapshot(manejarSnapshot)\n        }\n\n        obtenerProductos()\n\n        function manejarSnapshot(snapshot) {\n            const resultado = snapshot.docs.map(doc => {\n                return {\n                    id: doc.id,\n                    ...doc.data()\n                }\n            })\n            setComentariosDbTodos(resultado)\n\n        }\n    }, [])\n\n    useEffect(() => {\n\n        if (series.length > 0 && datosSerie !== null) {\n            const resultado = series.filter(serie => serie.nombre === datosSerie[0].nombre)\n\n            console.log(resultado[0].nombre)\n\n            setComentarios({\n                ...comentarios,\n                nombre: resultado[0].nombre,\n\n            })\n        }\n    }, [datosSerie])\n\n    useEffect(() => {\n        const revisarSerie = () => {\n\n            const prueba = series.filter(serie => serie.id === Number(match.params.id))\n\n            guardarDatosSerie(prueba)\n\n\n        }\n\n        revisarSerie()\n\n    }, [])\n\n    useEffect(() => {\n        const funMostrarEpisosdios = () => {\n\n            if (datosSerie) {\n                const resultado = datosSerie[0].temporadas.filter(temporada => temporada.nombre === temporadaState)\n\n                guardarTemporadaSeleccionada(resultado)\n\n            }\n\n\n        }\n\n        funMostrarEpisosdios()\n\n    }, [temporadaState, datosSerie])\n\n    /* useEffect */\n    useEffect(() => {\n        const verificar = () => {\n            if (temporadaSeleccionada.length > 0) {\n                guardarMostrarEpisodios(true)\n            } else {\n                guardarMostrarEpisodios(false)\n            }\n        }\n\n        verificar()\n    }, [temporadaSeleccionada])\n\n    const verEpisodio = episodio => {\n        guardaVerCapitulo(true)\n\n        guardarUrlCapitulo(episodio)\n\n\n    }\n\n    const volverSeleccion = () => {\n        history.push('/')\n    }\n\n    const enviarComentario = async e => {\n        e.preventDefault()\n\n        if (comentarios.nombreUsuario !== '' && comentarios.comentario !== '') {\n            await db.collection('comentariosSeries').add(comentarios)\n\n            setComentarios({\n                ...comentarios,\n                nombreUsuario: '',\n                comentario: '',\n                creado: Date.now(),\n\n            })\n\n            setConsultarDb(true)\n\n            setTimeout(() => {\n                setConsultarDb(false)\n            }, 3000);\n\n        }\n\n    }\n\n    const gusta = async nombre => {\n\n        if (votosGustaActual.length > 0 && !yaVotaste) {\n            const verificacion = votosGusta.filter(item => item.nombre === nombre)\n\n            const editarVotos = await db.collection('votosGustaSeries').doc(verificacion[0].id)\n\n            setYaVotaste(true)\n\n            return editarVotos.update({\n                votos: verificacion[0].votos + 1\n            })\n        } else {\n            const votosGusta = {\n                nombre: nombre,\n                votos: 1\n            }\n\n            if (!yaVotaste) {\n                await db.collection('votosGustaSeries').add(votosGusta)\n\n                setYaVotaste(true)\n            }\n        }\n\n        setConsultarDb(true)\n\n        setTimeout(() => {\n            setConsultarDb(false)\n        }, 3000);\n\n    }\n\n    const noGusta = async nombre => {\n\n        if (votosNoGustaActual.length > 0 && !yaVotaste) {\n            const verificacion = votosNoGusta.filter(item => item.nombre === nombre)\n\n            const editarVotos = await db.collection('votosNoGustaSeries').doc(verificacion[0].id)\n\n            setYaVotaste(true)\n\n            return editarVotos.update({\n                votos: verificacion[0].votos + 1\n            })\n        } else {\n            const votosNoGusta = {\n                nombre: nombre,\n                votos: 1\n            }\n\n            if (!yaVotaste) {\n                await db.collection('votosNoGustaSeries').add(votosNoGusta)\n\n                setYaVotaste(true)\n            }\n        }\n\n        setConsultarDb(true)\n\n        setTimeout(() => {\n            setConsultarDb(false)\n        }, 3000);\n    }\n\n    return (\n        <>\n            { datosSerie &&\n                <>\n                    <CardFlex>\n                        <img src={datosSerie[0].imagen} alt=\"\" />\n                        <CardFlexContenido>\n                            <h2>{datosSerie[0].nombre}</h2>\n                            <h4> <span>Categoria:</span>  {datosSerie[0].categoria}</h4>\n                            <p>{datosSerie[0].descripcion}</p>\n                            <ContenidoVotos>\n                                <div>\n                                    <i className=\"fas fa-thumbs-up\" onClick={() => gusta(datosSerie[0].nombre)}></i>\n                                    {votosGustaActual.length > 0\n                                        ? <p>{votosGustaActual[0].votos}</p>\n                                        : <p>0</p>\n\n                                    }\n\n                                </div>\n                                <div>\n                                    <i className=\"fas fa-thumbs-down\" onClick={() => noGusta(datosSerie[0].nombre)}></i>\n                                    {votosNoGustaActual.length > 0\n                                        ? <p>{votosNoGustaActual[0].votos}</p>\n                                        : <p>0</p>\n\n                                    }\n                                </div>\n                            </ContenidoVotos>\n                            <Boton onClick={() => volverSeleccion()}>Volver</Boton>\n                        </CardFlexContenido>\n\n                    </CardFlex>\n\n                    { verCapitulo\n                        ? <ContenedorReproductor >\n                            <iframe src={urlCapitulo} allowfullscreen='true' allowtransparency allow=\"autoplay\" scrolling=\"no\" frameborder=\"0\"></iframe>\n                        </ContenedorReproductor>\n                        : null\n\n                    }\n\n\n                    <Contenedor>\n                        <ContenedorTemporadas>\n                            <select name=\"temporada\" onChange={e => guardarTemporadaState(e.target.value)}>\n                                {\n                                    datosSerie[0].temporadas.map(temporada => {\n                                        return (\n                                            <option value={temporada.nombre}>{temporada.nombre}</option>\n                                        )\n                                    })\n                                }\n\n                            </select>\n                        </ContenedorTemporadas>\n\n                        {mostrarEpisodios\n                            ? <Tarjetas>\n\n                                {temporadaSeleccionada[0].episodios.map(episodio => (\n                                    <Card onClick={() => verEpisodio(episodio.url)}>\n                                        <CardImage >\n                                            <img src={datosSerie[0].imagen} alt={datosSerie[0].nombre} />\n                                        </CardImage>\n                                        <h4>{temporadaSeleccionada[0].nombre}</h4>\n                                        <h3>{episodio.nombre}</h3>\n\n                                    </Card>\n                                ))}\n                            </Tarjetas>\n\n                            : null\n\n                        }\n\n                    </Contenedor>\n\n                    <FormularioComentarios>\n                        <form\n                            onSubmit={enviarComentario}\n                        >\n                            <h2>Escribe Tu Comentario Sobre esta Pelicula</h2>\n                            <input\n                                type=\"text\"\n                                value={comentarios.nombreUsuario}\n                                name='nombreUsuario'\n                                placeholder='Escribe tu nombre'\n                                onChange={e => setComentarios({ ...comentarios, [e.target.name]: e.target.value })} />\n                            <br />\n\n                            <textarea\n                                name=\"comentario\"\n                                value={comentarios.comentario}\n                                cols=\"30\"\n                                rows=\"7\"\n                                placeholder='Que piensas de esta pelicula'\n                                onChange={e => setComentarios({ ...comentarios, [e.target.name]: e.target.value })}></textarea>\n                            <br />\n                            <button>Comentar</button>\n                        </form>\n                    </FormularioComentarios>\n\n                    { comentariosDb.length !== 0 &&\n\n                        <ContenedorComentarios>\n                            {comentariosDb.map(comentario => (\n                                <div className='comentario'>\n                                    <div className='imagen-nombre'>\n                                        <img src={imagenUsuario} alt={imagenUsuario} />\n                                        <h3>{comentario.nombreUsuario}</h3>\n                                    </div>\n                                    <div className='contenido-comentario'>\n                                        <h4>{comentario.comentario}</h4>\n                                        <p>Publicado hace: {formatDistanceToNow(new Date(comentario.creado), { locale: es })}</p>\n                                    </div>\n\n                                </div>\n                            ))}\n\n\n                        </ContenedorComentarios>\n                    }\n\n                </>\n\n            }\n\n\n\n\n        </>\n    );\n}\n\nexport default VerSerie;","/home/atlanticsoft/sagu/sagupelis/src/components/Carrusel.js",[],"/home/atlanticsoft/sagu/sagupelis/src/components/Series.js",["89"],"import React, { useState, useEffect } from 'react'\nimport Styled from '@emotion/styled'\nimport useInformacionSeries from '../hooks/useInformacionSeries'\n\n\n\nconst Titulo = Styled.h2`\n    margin: 2rem;\n\n    @media (min-width: 768px) {\n        margin: 2rem 8rem;\n    }\n`\n\nconst Contenedor = Styled.div`\n\n    display: grid;\n    grid-template-columns: 45% 45%;\n    grid-gap: 3rem;\n    margin: 2rem;\n\n    @media (min-width: 768px) {\n        grid-template-columns: 20rem 20rem 20rem;\n        margin: 2rem;\n        grid-gap: 6rem;\n    }\n\n    @media (min-width: 1200px) {\n        grid-template-columns: 20rem 20rem 20rem 20rem 20rem;\n        margin: 2rem 4rem 2rem 6rem;\n        grid-gap: 3rem;\n    }\n    \n    @media (min-width: 1300px) {\n        grid-template-columns: 20rem 20rem 20rem 20rem 20rem;\n        margin: 2rem 8rem;\n        grid-gap: 6rem;\n    }\n\n`\n\nconst Card = Styled.div`\n    margin-right: 1.5rem;\n\n    @media (min-width: 768px) {\n        margin-right: 2.5rem;\n\n        :hover{\n            cursor: pointer;\n        }\n    }\n`\n\nconst CardImage = Styled.div`\n    width: 15rem;\n    height: 20rem;\n    background-color:#fff;\n    border-radius: 10px;\n    margin-bottom: 3rem;\n   \n\n    img {\n        width: 100%;\n        height: auto;\n        \n    }\n    img {\n        :hover {\n            -webkit-transform:scale(1.2);transform:scale(1.2);\n            transition: all 1s ease;\n        }\n    }\n\n\n    @media (min-width: 768px) {\n        width: 22rem;\n        height: 30rem;\n        background-color:#fff;\n        margin-bottom: 5rem;\n    }\n`\n\nconst Series = ({ history }) => {\n\n    const [datosPelicula, guardarDatosPelicula] = useState({})\n    const [datosSerie, guardarDatosSerie] = useState({})\n\n    const [verPelicula, guardarVerPelicula] = useState(false)\n    const [verSerie, guardarVerSerie] = useState(false)\n\n    const { series } = useInformacionSeries()\n\n    useEffect(() => {\n        const verificarDatos = () => {\n\n            if (!datosSerie) {\n\n                guardarDatosSerie(false)\n            }\n        }\n\n        verificarDatos()\n\n    }, [datosPelicula])\n\n\n    const serieSeleccionada = serie => {\n\n        guardarDatosPelicula({})\n        guardarDatosSerie(serie)\n\n        guardarVerPelicula(false)\n        guardarVerSerie(true)\n\n        history.push(`/ver-serie/${serie.nombre}/${serie.id}`)\n\n    }\n\n    return (\n        <>\n            { !verPelicula && !verSerie\n\n                ?\n                <>\n                    <Titulo>Todas las Series</Titulo>\n\n                    <Contenedor>\n                            {\n                                series.map(serie =>\n                                    <Card onClick={() => serieSeleccionada(serie)}>\n                                        <CardImage >\n                                            <img src={serie.imagen} alt={serie.nombre} />\n                                        </CardImage>\n                                        <h3>{serie.nombre}</h3>\n\n                                    </Card>\n                                )\n                            }\n                        </Contenedor>\n                </>\n\n                : null\n\n            }\n\n        </>\n\n    );\n}\n\nexport default Series;","/home/atlanticsoft/sagu/sagupelis/src/components/Inicio.js",["90","91","92","93","94","95","96","97"],"/home/atlanticsoft/sagu/sagupelis/src/hooks/useInformacionSeries.js",[],"/home/atlanticsoft/sagu/sagupelis/src/hooks/useInformacionPeliculas.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":15,"column":8,"nodeType":"104","messageId":"105","endLine":15,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":29,"column":9,"nodeType":"104","messageId":"105","endLine":29,"endColumn":17},{"ruleId":"102","severity":1,"message":"107","line":89,"column":12,"nodeType":"104","messageId":"105","endLine":89,"endColumn":22},{"ruleId":"102","severity":1,"message":"108","line":127,"column":19,"nodeType":"104","messageId":"105","endLine":127,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":138,"column":8,"nodeType":"111","endLine":138,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":261,"column":8,"nodeType":"111","endLine":261,"endColumn":33,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"113","line":272,"column":8,"nodeType":"111","endLine":272,"endColumn":35,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"116","line":347,"column":8,"nodeType":"111","endLine":347,"endColumn":23,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":360,"column":8,"nodeType":"111","endLine":360,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":497,"column":25,"nodeType":"122","endLine":499,"endColumn":148},{"ruleId":"102","severity":1,"message":"123","line":33,"column":7,"nodeType":"104","messageId":"105","endLine":33,"endColumn":12},{"ruleId":"109","severity":1,"message":"124","line":189,"column":8,"nodeType":"111","endLine":189,"endColumn":23,"suggestions":"125"},{"ruleId":"102","severity":1,"message":"126","line":130,"column":7,"nodeType":"104","messageId":"105","endLine":130,"endColumn":16},{"ruleId":"109","severity":1,"message":"127","line":391,"column":8,"nodeType":"111","endLine":391,"endColumn":33,"suggestions":"128"},{"ruleId":"109","severity":1,"message":"127","line":402,"column":8,"nodeType":"111","endLine":402,"endColumn":35,"suggestions":"129"},{"ruleId":"109","severity":1,"message":"130","line":489,"column":8,"nodeType":"111","endLine":489,"endColumn":20,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"132","line":503,"column":8,"nodeType":"111","endLine":503,"endColumn":10,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"121","line":672,"column":29,"nodeType":"122","endLine":672,"endColumn":144},{"ruleId":"109","severity":1,"message":"127","line":104,"column":8,"nodeType":"111","endLine":104,"endColumn":23,"suggestions":"134"},{"ruleId":"102","severity":1,"message":"135","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"136","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":15},{"ruleId":"102","severity":1,"message":"137","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":12},{"ruleId":"102","severity":1,"message":"138","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":12},{"ruleId":"102","severity":1,"message":"139","line":233,"column":12,"nodeType":"104","messageId":"105","endLine":233,"endColumn":25},{"ruleId":"102","severity":1,"message":"107","line":234,"column":12,"nodeType":"104","messageId":"105","endLine":234,"endColumn":22},{"ruleId":"102","severity":1,"message":"140","line":239,"column":12,"nodeType":"104","messageId":"105","endLine":239,"endColumn":26},{"ruleId":"102","severity":1,"message":"141","line":239,"column":28,"nodeType":"104","messageId":"105","endLine":239,"endColumn":49},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Carrusel' is defined but never used.","Identifier","unusedVar","'estrenos' is assigned a value but never used.","'datosSerie' is assigned a value but never used.","'filtro' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'peliculas'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'datosPelicula'. Either include it or remove the dependency array.",["145"],["146"],"React Hook useEffect has missing dependencies: 'comentarios' and 'peliculas'. Either include them or remove the dependency array. You can also do a functional update 'setComentarios(c => ...)' if you only need 'comentarios' in the 'setComentarios' call.",["147"],"React Hook useEffect has missing dependencies: 'match.params.id' and 'peliculas'. Either include them or remove the dependency array.",["148"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Boton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'peliculas' and 'series'. Either include them or remove the dependency array.",["149"],"'Temporada' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'datosSerie'. Either include it or remove the dependency array.",["150"],["151"],"React Hook useEffect has missing dependencies: 'comentarios' and 'series'. Either include them or remove the dependency array. You can also do a functional update 'setComentarios(c => ...)' if you only need 'comentarios' in the 'setComentarios' call.",["152"],"React Hook useEffect has missing dependencies: 'match.params.id' and 'series'. Either include them or remove the dependency array.",["153"],["154"],"'useEffect' is defined but never used.","'shortid' is defined but never used.","'Push' is defined but never used.","'logo' is defined but never used.","'datosPelicula' is assigned a value but never used.","'todasPeliculas' is assigned a value but never used.","'guardarTodasPeliculas' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [peliculas]",{"range":"177","text":"178"},"Update the dependencies array to be: [votosGusta, consultarDb, datosPelicula]",{"range":"179","text":"180"},"Update the dependencies array to be: [votosNoGusta, consultarDb, datosPelicula]",{"range":"181","text":"182"},"Update the dependencies array to be: [comentarios, datosPelicula, peliculas]",{"range":"183","text":"184"},"Update the dependencies array to be: [match.params.id, peliculas]",{"range":"185","text":"186"},"Update the dependencies array to be: [busquedatexto, peliculas, series]",{"range":"187","text":"188"},"Update the dependencies array to be: [votosGusta, consultarDb, datosSerie]",{"range":"189","text":"190"},"Update the dependencies array to be: [votosNoGusta, consultarDb, datosSerie]",{"range":"191","text":"192"},"Update the dependencies array to be: [comentarios, datosSerie, series]",{"range":"193","text":"194"},"Update the dependencies array to be: [match.params.id, series]",{"range":"195","text":"196"},"Update the dependencies array to be: [datosPelicula, datosSerie]",{"range":"197","text":"198"},[2829,2831],"[peliculas]",[5445,5470],"[votosGusta, consultarDb, datosPelicula]",[5730,5757],"[votosNoGusta, consultarDb, datosPelicula]",[7713,7728],"[comentarios, datosPelicula, peliculas]",[7979,7981],"[match.params.id, peliculas]",[4452,4467],"[busquedatexto, peliculas, series]",[7950,7975],"[votosGusta, consultarDb, datosSerie]",[8232,8259],"[votosNoGusta, consultarDb, datosSerie]",[10474,10486],"[comentarios, datosSerie, series]",[10720,10722],"[match.params.id, series]",[2055,2070],"[datosPelicula, datosSerie]"]